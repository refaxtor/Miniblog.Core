@model Post
@inject IOptionsSnapshot<BlogSettings> settings
@{
	ViewData[Constants.Title] = Model.Title;
	ViewData[Constants.Description] = Model.Excerpt;
	bool showFullPost = ViewContext.RouteData.Values.ContainsKey(Constants.slug);
	string host = $"{Context.Request.Scheme}://{Context.Request.Host}";
	bool isCodePreview = Model.Content.Contains("</code>");
}

@section Head {
	<link rel="canonical" href="@(host + Model.GetLink())" />
}

<article class="post container" itemscope itemtype="http://schema.org/BlogPosting" itemprop="blogPost">
	<header class="post-header">
		@*<img width="48" height="48" alt="Eric Ferraiuolo&#x27;s avatar" class="post-avatar" src="/img/common/ericf-avatar.png" />*@

		<h2 class="post-title" itemprop="name headline"><a href="@Model.GetLink()" rel="canonical" itemprop="url">@Model.Title</a></h2>
	</header>

	<p class="post-meta">
		<time datetime="@Model.PubDate.ToString("s")" itemprop="datePublished">Published @Model.PubDate.ToString("MMM d, yyyy")</time> by @settings.Value.Owner

		@if (Model.Categories.Any())
		{
			<text> in </text>
			@foreach (string cat in Model.Categories)
			{
				<a asp-controller="Blog" asp-action="Category" asp-route-category="@cat.ToLowerInvariant()" asp-route-page="" class="post-category" itemprop="articleSection">@cat</a>
			}
			<text> and has </text>
		}

		<a href="@Model.GetLink()#comments" itemprop="discussionUrl" title="Go to the comments section">
			<span itemprop="commentCount">@Model.Comments.Count</span> @(Model.Comments.Count == 1 ? "comment" : "comments")
		</a>

		<meta itemprop="author" content="@settings.Value.Owner" />
		<meta itemprop="dateModified" content="@Model.LastModified.ToString("s")" />
		<meta itemprop="mainEntityOfPage" content="@(host + Model.GetLink())" />
	</p>

	@if (User.Identity.IsAuthenticated)
	{
		<a asp-controller="Blog" asp-action="edit" asp-route-id="@Model.ID" title="Edit the post">Edit post</a>
	}

	<div class="post-description" itemprop="articleBody mainEntityOfPage" cdnify>
		@if (showFullPost || settings.Value.ListView == PostListView.FullPosts)
		{
			@Html.Raw(Model.RenderContent())
		}
		else if (settings.Value.ListView == PostListView.TitlesAndExcerpts)
		{
			@Html.Raw(Model.Excerpt)
		}
	</div>

	@if (showFullPost)
	{
		await Html.RenderPartialAsync("_SocialSharing", Model.Title);
		await Html.RenderPartialAsync("Comments");

		@section Preload {
			@if (isCodePreview)
			{
				<link rel="preload" href="~/lib/prism/prism.css" as="style" />
				<script src="~/lib/prism/prism.js" async defer></script>
			}
		}
	}

	@if (User.Identity.IsAuthenticated)
	{
		@section Scripts {
			<script src="~/js/admin.js" async defer></script>
			<link rel="stylesheet" href="~/css/admin.css" />
		}
	}

</article>


















